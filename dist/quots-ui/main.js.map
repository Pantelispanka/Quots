{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addapp/addapp.component.html","webpack:///./src/app/addapp/addapp.component.ts","webpack:///./src/app/api/apiconfig.ts","webpack:///./src/app/api/app.service.ts","webpack:///./src/app/api/login.service.ts","webpack:///./src/app/api/users.api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/apps/apps.component.html","webpack:///./src/app/apps/apps.component.ts","webpack:///./src/app/dialogs/confirm/confirm.component.html","webpack:///./src/app/dialogs/confirm/confirm.component.ts","webpack:///./src/app/dialogs/dialogs.service.ts","webpack:///./src/app/dialogs/errordialog/errordialog.component.html","webpack:///./src/app/dialogs/errordialog/errordialog.component.ts","webpack:///./src/app/editapp/editapp.component.html","webpack:///./src/app/editapp/editapp.component.ts","webpack:///./src/app/edituser/edituser.component.html","webpack:///./src/app/edituser/edituser.component.ts","webpack:///./src/app/session/session.service.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n<h4 class=\"addapph\">Add application</h4>\n<form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"App id\" [(ngModel)]='appid' [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n\n    <!-- <mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"Base URL\" [(ngModel)]='baseurl' [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field> -->\n\n    <mat-slide-toggle class=\"example-margin\" [checked]=\"enabled\">\n      Enabled\n    </mat-slide-toggle>\n\n</form>\n<button mat-flat-button [disabled]=\"!appid\" class=\"addb\" (click)=\"addApp()\" color=\"primary\">Add</button>","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../api/app.service';\nimport { Application } from '../models/applications';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-addapp',\n  templateUrl: './addapp.component.html',\n  styleUrls: ['./addapp.component.css']\n})\nexport class AddappComponent implements OnInit {\n\n  enabled:boolean = true\n  canadd:boolean = true\n\n  appid:string\n  baseurl:string\n\n  constructor(\n    private appService:AppService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  addApp(){\n    let applic = <Application>{}\n\n    applic.id = this.appid\n    applic.baseURLS = [this.baseurl]\n    applic.enabled = this.enabled\n    this.appService.addApp(applic).subscribe((res:Application) =>{\n      this.router.navigate(['/applications/' + res.id])\n    })\n\n  }\n\n}\n","export let Config = {\n        'QuotsApiBase': window.location.hostname,\n        'QuotsHttpScheme': window.location.protocol,\n        'QuotsPort': window.location.port\n};","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHandler, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http';\nimport { SessionService } from '../session/session.service';\nimport { Config } from './apiconfig';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Application } from '../models/applications';\nimport { DialogsService } from '../dialogs/dialogs.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  path:string\n\n  constructor(\n    private http:HttpClient,\n    private sessionService:SessionService,\n    private dialogsService:DialogsService\n  ) {\n    if(Config.QuotsPort.length > 2){\n      this.path = Config.QuotsHttpScheme + '//' + Config.QuotsApiBase + \":\" + \"8000\"\n    }else{\n      this.path = Config.QuotsHttpScheme + '//' + Config.QuotsApiBase\n    }\n  }\n\n  public getApps(min:Number, max:Number):Observable<Array<Application>>{\n    let params = new HttpParams().set('min', min.toString()).set('max', max.toString());\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/app\"\n    return this.http.get(path, {headers:headers, params:params}).pipe(\n      tap((res : Response) => { \n        return res            \n    }),catchError( err => this.dialogsService.onError(err) )\n    )\n  }\n\n  public addApp(app:Application){\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/app\"\n    return this.http.post(path, app, {headers:headers}).pipe(\n      tap((res:Response)=>{\n        return res\n      }),catchError(err => this.dialogsService.onError(err))  \n    )\n  }\n\n  public getAppById(id:string){\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/app/\" +id\n    return this.http.get(path, {headers:headers}).pipe(\n      tap((res:Response)=>{\n        return res\n      }),catchError(err => this.dialogsService.onError(err))  \n    )\n  }\n\n  public updateAppSecret(id:String){\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/app/\" +id + \"/secret\"\n    return this.http.put(path,{}, {headers:headers}).pipe(\n      tap((res:Response)=>{\n        return res\n      }),catchError(err => this.dialogsService.onError(err))  \n    )\n  }\n\n  public updateApp(app:Application){\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/app\"\n    return this.http.put(path, app, {headers:headers}).pipe(\n      tap((res:Response)=>{\n        return res\n      }),catchError(err => this.dialogsService.onError(err))  \n    )\n  }\n\n  public deleteApp(appId:string){\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/app/\" + appId\n    return this.http.delete(path, {headers:headers}).pipe(\n      tap((res:Response)=>{\n        return res\n      }),catchError(err => this.dialogsService.onError(err))  \n    )\n  }\n\n  public countAllApps():Observable<HttpResponse<Application>>{\n    let params = new HttpParams().set('min', \"0\").set('max', \"1\");\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/app\"\n    return this.http.get(path, {headers:headers, params:params,observe: 'response'}).pipe(\n      tap((res : HttpResponse<Application>) => { \n        return res            \n    }),catchError( err => this.dialogsService.onError(err) )\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpParams, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport { Config } from './apiconfig';\nimport { map, filter, catchError, mergeMap, tap } from 'rxjs/operators';\nimport { AuthResponse } from '../models/authresponse';\n// import { Observable } from 'rxjs/Observable';\nimport { Observable} from 'rxjs';\nimport {EMPTY} from 'rxjs';\nimport { DialogsService } from '../dialogs/dialogs.service';\nimport { ValidationResponse } from '../models/validationResponse';\nimport { SessionService } from '../session/session.service';\nimport { RefreshedToken } from '../models/refreshedApiKey';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  path:string\n\n  constructor(\n    private http:HttpClient,\n    private dialogsService:DialogsService,\n    private sessionService:SessionService) {\n\n      if(Config.QuotsPort.length > 2){\n        this.path = Config.QuotsHttpScheme + '//' + Config.QuotsApiBase + \":\" + \"8000\"\n      }else{\n        this.path = Config.QuotsHttpScheme + '//' + Config.QuotsApiBase\n      }\n    }\n\n  public getApiKey(username:string, password:string): Observable<AuthResponse> {\n    let params = new HttpParams().set('username', username).set('password', password);\n    let path = this.path + \"/apikey\"\n    return this.http.get(path, { params: params }).pipe(\n      tap((res : AuthResponse) => {\n          return res;\n      }),catchError(err => this.dialogsService.onError(err)));\n\n  }\n\n  public validateApiKey(apikey:string): Observable<ValidationResponse>{\n    let params = new HttpParams().set('apikey', apikey);\n    let path = this.path + \"/apikey/valid\"\n    // let headers = new HttpHeaders().set('Authorization', \"Bearer \" + this.sessionService.getQuotsApiKey())\n    // return this.http.get(path, { params: params, headers:headers })\n    return this.http.get(path, { params: params})\n  }\n\n  public refreshApiKey(apikey:string): Observable<RefreshedToken>{\n    let params = new HttpParams().set('apikey', apikey);\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/apikey/refresh\"\n    return this.http.put(path,{}, {headers:headers, params: params }).pipe(\n      tap((res : RefreshedToken) => {\n          return res;\n      }),catchError(err => this.dialogsService.onError(err)));\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { SessionService } from '../session/session.service';\nimport { DialogsService } from '../dialogs/dialogs.service';\nimport { Config } from './apiconfig';\nimport { Observable } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  path:string\n\n  constructor(\n    private http:HttpClient,\n    private sessionService:SessionService,\n    private dialogsService:DialogsService\n  ) {\n    if(Config.QuotsPort.length > 2){\n      this.path = Config.QuotsHttpScheme + '//' + Config.QuotsApiBase + \":\" + \"8000\"\n    }else{\n      this.path = Config.QuotsHttpScheme + '//' + Config.QuotsApiBase\n    }\n  }\n\n  public getUserById(id:string):Observable<any>{\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/users/\" + id\n    return this.http.get(path, {headers:headers}).pipe(\n      tap((res : Response) => { \n        return res            \n    }),catchError( err => this.dialogsService.onError(err) )\n    )\n  }\n\n  public getUsers(min:Number, max:Number):Observable<Array<User>>{\n    let params = new HttpParams().set('min', min.toString()).set('max', max.toString()).set('email', '');\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/users\"\n    return this.http.get(path, {headers:headers, params:params}).pipe(\n      tap((res : Response) => { \n        return res            \n    }),catchError( err => this.dialogsService.onError(err) )\n    )\n  }\n\n  public getUserByEmail(email:string):Observable<Array<User>>{\n    let params = new HttpParams().set('min', \"0\").set('max', \"0\").set('email', email);\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/users\"\n    return this.http.get(path, {headers:headers, params:params}).pipe(\n      tap((res : Response) => { \n        return res            \n    }),catchError( err => this.dialogsService.onError(err) )\n    )\n  }\n\n  public updateUsersCredits(suer:User):Observable<User>{\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/users/credits\"\n    return this.http.put(path,suer, {headers:headers}).pipe(\n      tap((res : Response) => { \n        return res            \n    }),catchError( err => this.dialogsService.onError(err) )\n    )\n  }\n\n  public countAllUsers():Observable<HttpResponse<User>>{\n    let params = new HttpParams().set('min', \"0\").set('max', \"1\").set('email', '');\n    const token = this.sessionService.getQuotsApiKey()\n    const tokenValue = 'Bearer ' + token;\n    let headers = new HttpHeaders().set('Authorization', tokenValue)\n    let path = this.path + \"/users\"\n    return this.http.get(path, {headers:headers, params:params,observe: 'response'}).pipe(\n      tap((res : HttpResponse<User>) => { \n        return res            \n    }),catchError( err => this.dialogsService.onError(err) )\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppsComponent } from './apps/apps.component';\nimport { AddappComponent } from './addapp/addapp.component';\nimport { EditappComponent } from './editapp/editapp.component';\nimport { UsersComponent } from './users/users.component';\nimport { EdituserComponent } from './edituser/edituser.component';\n\nconst routes: Routes = [\n  {path: 'applications', component: AppsComponent},\n  {path:'applications/add', component: AddappComponent},\n  {path: 'applications/:id', component:  EditappComponent},\n  {path:'users', component: UsersComponent},\n  {path:'users/:id', component: EdituserComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n  \n}\n","<mat-toolbar class=\"main-toolbar\">\n  <span class=\"head\" color=\"primary\">Quots</span>\n  <mat-icon class=\"quots-icon\" color=\"primary\">data_usage</mat-icon>\n  \n  <span class=\"example-spacer\"></span>\n\n  <!-- <span class=\"app-action\">\n    <button mat-icon-button color=\"primary\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n  </span> -->\n</mat-toolbar>\n\n<div class=\"content\" > \n\n  <div *ngIf=\"loggedin; else loginform\">\n      <mat-drawer-container class=\"container\">\n          <mat-drawer mode=\"side\" opened class=\"drawer\">  \n            <button mat-flat-button class=\"appsbutton\" (click)=\"goTo('/applications')\">\n              Applications\n            </button>\n            <button mat-flat-button class=\"appsbutton\" (click)=\"goTo('/users')\">\n              Users\n            </button>\n          </mat-drawer>\n          <mat-drawer-content>\n              <router-outlet></router-outlet>\n          </mat-drawer-content>\n      </mat-drawer-container>\n    </div>\n    \n  </div>\n\n  <ng-template #loginform>\n\n      <div class=\"login-container \">\n        <div class=\"empty\"></div>\n        <div class=\"login-card mat-elevation-z2\">\n            <div class=\"loginh\">\n                <h3>Welcome to Quots </h3>\n              </div>\n              <mat-form-field class=\"login-fields\">\n                  <input matInput placeholder=\"Username\" type=\"string\" class=\"example-right-align\" [(ngModel)]='username'>\n              </mat-form-field>\n    \n              <mat-form-field class=\"login-fields\">\n                <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" [(ngModel)]='password'>\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n              </mat-form-field>\n              <button mat-raised-button class=\"login-butt\" matTooltip=\"Login\" (click)=\"login()\">\n                  <mat-icon>arrow_right</mat-icon>\n              </button>\n            </div>\n        </div>\n  </ng-template>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { LoginService } from './api/login.service';\nimport { AuthResponse } from './models/authresponse';\nimport { SessionService } from './session/session.service';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ValidationResponse } from './models/validationResponse';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { EMPTY } from 'rxjs';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  cookieValue:string\n  loggedin:Boolean = false\n  apikey:string\n  hide = true;\n\n  username:string\n  password:string\n\n  title = 'quots-ui';\n\n  constructor(\n    private cookieService: CookieService,\n    private sessionService:SessionService,\n    private loginApi: LoginService,\n    private router:Router\n  ){}\n\n\n  ngOnInit(){\n    // this.cookieService.set(\"name\", \"val\", 30, \"/\", \"jaqpot.rg\")\n    // this.cookieValue = this.cookieService.get('jaqpot')\n    this.apikey = this.sessionService.getQuotsApiKey()\n    this.loginApi.validateApiKey(this.apikey).pipe( \n      tap( (resp:ValidationResponse) =>{\n        return resp;\n      },catchError(err => this.noValid(err)))).subscribe(resp => {\n        this.loggedin = true;\n        this.router.navigate(['applications'])\n      }) \n  }\n\n  login(){\n    this.loginApi.getApiKey(this.username, this.password).subscribe((resp:AuthResponse) =>{\n      if (typeof resp != 'undefined'){\n        this.loggedin = true;\n        this.sessionService.setQuotsApiKey(resp.apikey)\n        this.router.navigate(['applications'])\n      }\n    })\n  }\n\n  noValid(err:HttpErrorResponse){\n    if (err.error instanceof Error) {\n      console.error('An error occurred:', err.error.message);\n    } else {\n      this.sessionService.deleteQuotsKet()\n      this.loggedin = false;\n      console.error(`Backend returned code ${err.status}, body was: ${err.error}`);\n    }\n    return EMPTY;\n  }\n\n  goTo(rout:string){\n    this.router.navigate([rout])\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule, MatIconModule, MatButtonModule, MatSidenavModule, MatFormFieldModule, MatInputModule, MatTooltipModule, MatDialogModule, MatTableModule, MatSlideToggleModule, MatDividerModule, MatPaginatorModule } from '@angular/material';\nimport {CookieService} from 'ngx-cookie-service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { LoginService } from './api/login.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrordialogComponent } from './dialogs/errordialog/errordialog.component';\nimport { DialogsService } from './dialogs/dialogs.service';\nimport { AppsComponent } from './apps/apps.component';\nimport { AddappComponent } from './addapp/addapp.component';\nimport { EditappComponent } from './editapp/editapp.component';\nimport { ConfirmComponent } from './dialogs/confirm/confirm.component';\nimport { UsersComponent } from './users/users.component';\nimport { EdituserComponent } from './edituser/edituser.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrordialogComponent,\n    AppsComponent,\n    AddappComponent,\n    EditappComponent,\n    ConfirmComponent,\n    UsersComponent,\n    EdituserComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatDividerModule,\n    MatPaginatorModule,\n    // MatModule\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatButtonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  entryComponents:[\n    ErrordialogComponent,ConfirmComponent\n  ],\n  providers: [CookieService,DialogsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<h4 class=\"aph\">Available Apps</h4>\n<button mat-mini-fab \n        color=\"primary\" \n        aria-label=\"Example icon-button with a heart icon\" \n        class=\"addb\" matTooltip=\"Add application\"\n        (click)=\"addApp()\">\n    <mat-icon>add</mat-icon>\n  </button>\n\n<div *ngIf=\"dataSource\" class=\"mat-elevation-z8 all\">\n    <table mat-table [dataSource]=\"dataSource\" >\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"Id\">\n          <th mat-header-cell *matHeaderCellDef> Id </th>\n          <td mat-cell *matCellDef=\"let app\"> {{app.id}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"Enabled\">\n          <th mat-header-cell *matHeaderCellDef> Enabled </th>\n          <td mat-cell *matCellDef=\"let app\"> {{app.enabled}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <!-- <ng-container matColumnDef=\"BaseURL\">\n          <th mat-header-cell *matHeaderCellDef> BaseURL </th>\n          <td mat-cell *matCellDef=\"let app\"> {{app.baseURLS[0]}} </td>\n        </ng-container> -->\n\n        <ng-container matColumnDef=\"Edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let app\"> \n              <button mat-icon-button (click)=\"editApp(app)\">\n                <mat-icon>edit</mat-icon>\n              </button>\n            </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        \n    </table>\n    <mat-paginator [length]=\"totalApps\" [pageSize]=\"10\" (page)=\"pageEvent = getApps($event)\"></mat-paginator>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AppService } from '../api/app.service';\nimport { Application } from '../models/applications';\nimport { UsersService } from '../api/users.api.service';\nimport { Router } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\nimport { MatPaginator, PageEvent } from '@angular/material';\nimport { LoginService } from '../api/login.service';\nimport { SessionService } from '../session/session.service';\n\n@Component({\n  selector: 'app-apps',\n  templateUrl: './apps.component.html',\n  styleUrls: ['./apps.component.css']\n})\nexport class AppsComponent implements OnInit {\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  applications:Application[]\n  \n  // displayedColumns: string[] = ['Id', 'Enabled', 'BaseURL', 'Edit'];\n  displayedColumns: string[] = ['Id', 'Enabled', 'Edit'];\n  dataSource\n  totalApps:number\n\n\n  \n  constructor(\n    private appsService:AppService,\n    private loginService:LoginService,\n    private sessionService:SessionService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {  \n    this.appsService.getApps(0, 10).subscribe(res =>{\n      this.applications = res\n      this.dataSource = res\n    })\n    this.appsService.countAllApps().subscribe((res:HttpResponse<any>) =>{\n      this.totalApps = Number(res.headers.get('total'))\n    })\n    this.loginService.refreshApiKey(this.sessionService.getQuotsApiKey()).subscribe(res =>{\n      if(res){\n        this.sessionService.setQuotsApiKey(res.refreshedtoken)\n      }\n    })\n  }\n\n  editApp(app){\n    this.router.navigate(['applications/' + app.id])\n  }\n\n  addApp(){\n    this.router.navigate(['applications/add'])\n  }\n\n  getApps(event:PageEvent){\n    let offset = event.pageSize * event.pageIndex\n    let size = event.pageSize\n    this.appsService.getApps(offset, size).subscribe(res =>{\n      this.applications = res\n      this.dataSource = res\n    })\n  }\n\n}\n","<div>\n  <h2 mat-dialog-title>Confirm</h2>\n  <mat-dialog-content>\n    {{confirmMessage}}\n    <br><br>\n  </mat-dialog-content>\n  <mat-divider></mat-divider>\n  <mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" (click)=\"onCloseConfirm()\">{{confirmationAction}}</button>\n    <button mat-button (click)=\"onCloseCancel()\">CANCEL</button>\n  </mat-dialog-actions>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.css']\n})\nexport class ConfirmComponent implements OnInit {\n\n  confirmMessage:string\n  confirmationAction:string\n  constructor(\n    public thisDialogRef: MatDialogRef<ConfirmComponent>\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onCloseConfirm() {\n    this.thisDialogRef.close(true);\n  }\n  \n  onCloseCancel() {\n    this.thisDialogRef.close(false);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { ErrordialogComponent } from './errordialog/errordialog.component';\nimport { MatDialogRef, MatDialog } from '@angular/material';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ConfirmComponent } from './confirm/confirm.component';\n\n@Injectable({\n  providedIn: 'root'\n})\n// @Injectable()\nexport class DialogsService {\n\n  constructor(\n    private dialogs: MatDialog\n  ) { }\n\n\n  public onError(error:HttpErrorResponse){\n    let dialogRef: MatDialogRef<ErrordialogComponent>;\n    dialogRef = this.dialogs.open(ErrordialogComponent);\n    dialogRef.componentInstance.error = error.error;\n    // dialogRef.componentInstance.details = errorReport.details;\n    // dialogRef.componentInstance.message = errorReport.message;\n    return dialogRef.afterClosed();\n  }\n\n  public confirmDialog(message:string, confirmationAction:string){\n    let dialogRef: MatDialogRef<ConfirmComponent>;\n    dialogRef = this.dialogs.open(ConfirmComponent);\n    dialogRef.componentInstance.confirmMessage = message\n    dialogRef.componentInstance.confirmationAction = confirmationAction\n    return dialogRef.afterClosed();\n  }\n\n}\n","<div class=\"errorall\">\n  <mat-icon class=\"centerit\">\n    warning\n  </mat-icon>\n\n  <div class=\"centerit\">\n    {{error.message}}\n  </div>\n\n  <div class=\"centerit\">\n    {{error.status}}\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ErrorReport } from 'src/app/models/errorReport';\n\n@Component({\n  selector: 'app-errordialog',\n  templateUrl: './errordialog.component.html',\n  styleUrls: ['./errordialog.component.css']\n})\nexport class ErrordialogComponent implements OnInit {\n\n  error:ErrorReport\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"app\">\n  <h3 class=\"appid\">App ID: {{app.id}}</h3>\n\n  <div class=\"appenable\">\n      <mat-slide-toggle\n      class=\"example-margin\"\n      [color]=\"accent\"\n      [checked]=\"app.enabled\">\n      Enabled\n    </mat-slide-toggle>\n  </div>\n\n  <div class=\"appsecret\">\n      <h4>Applications secret:  {{app.clientsecret}} </h4>\n      <button mat-raised-button color=\"warning\" (click)=\"regenerateSecret()\" matTooltip=\"Regenerate secret\" class=\"regenerate\">\n        <mat-icon>cached</mat-icon>\n    </button>\n  </div>\n\n  <!-- <form class=\"example-form baseurls mat-elevation-z2\">\n    <h5>Application base urls</h5>\n    <div *ngFor=\"let url of app.baseURLS\">\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Available url\" value={{url}} (keyup)=\"onUrlInput($event)\">\n            <button mat-button *ngIf=\"url; else input\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"deleteURL(url)\" matTooltip=\"Delete URL\">\n                <mat-icon>close</mat-icon>\n            </button>\n            <ng-template  #input>\n                <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"addURL()\" matTooltip=\"Enable URL\">\n                    <mat-icon>add</mat-icon>\n                </button>\n            </ng-template>\n          </mat-form-field>\n    </div>\n    <button mat-icon-button color=\"accent\" (click)=\"addBaseUrl()\" [disabled]=\"addDisabled\" matTooltip=\"Add BaseURL\">\n        <mat-icon>add</mat-icon>\n    </button>\n\n    </form> -->\n\n    <form class=\"usages-form usages mat-elevation-z2\">\n        <h5>Application usages and costs</h5>\n        <div *ngFor=\"let usage of app.usagetypes\">\n          <div *ngIf=\"usage.length > 0; else usagetype\">\n              <mat-form-field class=\"example-full-width\">\n                  <input matInput placeholder=\"{{usage}} cost\" value={{app.usagescost[usage]}} (keyup)=\"onUsageCostInput($event, usage)\">\n                  <button mat-button *ngIf=\"usage; else input\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"deleteUsage(usage)\" matTooltip=\"Delete usage\">\n                      <mat-icon>close</mat-icon>\n                  </button>\n                  <ng-template  #input>\n                      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"addUsage()\" matTooltip=\"Enable URL\">\n                          <mat-icon>add</mat-icon>\n                      </button>\n                  </ng-template>\n                </mat-form-field>\n          </div>\n          <ng-template #usagetype>\n              <mat-form-field class=\"example-full-width\">\n                  <input matInput placeholder=\"Usage type\" value={{usage}} (keyup)=\"onUsageTypeInput($event)\">\n                  <button mat-button *ngIf=\"usage; else input\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"deleteUsage(usage)\" matTooltip=\"Delete URL\">\n                      <mat-icon>close</mat-icon>\n                  </button>\n                  <ng-template  #input>\n                      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"addUsageType()\" matTooltip=\"Add usage type\">\n                          <mat-icon>add</mat-icon>\n                      </button>\n                  </ng-template>\n                </mat-form-field>\n          </ng-template>\n        </div>\n        <button mat-icon-button color=\"accent\" (click)=\"addUsage()\" matTooltip=\"Add Usage\">\n            <mat-icon>add</mat-icon>\n        </button>\n        </form>\n\n        <button mat-raised-button color=\"accent\" matSuffix aria-label=\"Clear\"  (click)=\"deleteApp()\" matTooltip=\"Delete app\" class=\"delete-b\">\n            <mat-icon>delete</mat-icon>\n        </button>\n        <button mat-raised-button color=\"accent\" matSuffix aria-label=\"Clear\" [disabled]=\"savebutton\" (click)=\"saveApp()\" matTooltip=\"Save changes\" class=\"save-b\">\n            <mat-icon>save</mat-icon>\n        </button>\n\n\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Application } from '../models/applications';\nimport { AppService } from '../api/app.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { DialogsService } from '../dialogs/dialogs.service';\n\n@Component({\n  selector: 'app-editapp',\n  templateUrl: './editapp.component.html',\n  styleUrls: ['./editapp.component.css']\n})\nexport class EditappComponent implements OnInit {\n\n  appid:string\n  app:Application\n\n  tempBaseUrl:string\n  tempUsageType:string\n  addDisabled:boolean = false\n  savebutton:boolean = true;\n\n\n  constructor(\n    private route:ActivatedRoute,\n    private appService:AppService,\n    private router:Router,\n    private dialogsService:DialogsService\n  ) { }\n\n  ngOnInit() {\n    this.appid = this.route.snapshot.params['id'];\n    this.appService.getAppById(this.appid).subscribe((app:Application)=>{\n      this.app = app\n    })\n  }\n\n  addBaseUrl(){\n    if(typeof this.app.baseURLS === 'undefined'){\n      this.app.baseURLS = []\n    }\n    this.app.baseURLS.push('')\n    this.tempBaseUrl = ''\n    this.addDisabled = true\n  }\n\n  onUrlInput(event){\n    this.tempBaseUrl = event.target.value\n  }\n\n  addURL(){\n    if(typeof this.app.baseURLS === 'undefined'){\n      this.app.baseURLS = []\n    }\n    let emptyIndex = this.app.baseURLS.indexOf('')\n    if(emptyIndex > -1){\n      this.app.baseURLS[emptyIndex] = this.tempBaseUrl\n    }\n    this.addDisabled = false;\n    this.savebutton = false;\n  }\n\n  deleteURL(url){\n    let index = this.app.baseURLS.indexOf(url)\n    this.app.baseURLS.splice(index, 1)\n    this.savebutton = false;\n  }\n\n  addUsage(){\n    if(typeof this.app.usagetypes === 'undefined' || this.app.usagetypes ===  null){\n      this.app.usagetypes = []\n      this.app.usagescost = {}\n    }\n    this.tempUsageType = '' \n    this.app.usagetypes.push('')\n  }\n\n  onUsageTypeInput(event){\n    this.tempUsageType = event.target.value\n  }\n\n  addUsageType(){\n    if(typeof this.app.usagetypes === 'undefined' ){\n      this.app.usagetypes = []\n    }\n    let ind = this.app.usagetypes.indexOf(this.tempUsageType)\n    this.app.usagetypes.splice(ind, 1)\n    this.app.usagescost[this.tempUsageType] = 0\n    this.app.usagetypes.push(this.tempUsageType)\n    this.tempUsageType = ''\n    this.savebutton = false;\n  }\n\n  deleteUsage(usage){\n\n    let index = this.app.usagetypes.indexOf(usage)\n    this.app.usagetypes.splice(index, 1)\n    delete this.app.usagescost[usage]\n    this.savebutton = false;\n  }\n\n  onUsageCostInput(event, usage){\n    this.app.usagescost[usage] = Number(event.target.value)\n  }\n\n  saveApp(){\n    this.appService.updateApp(this.app).subscribe(app=>{\n      this.dialogsService.confirmDialog(\"Application saved\", \"OK\")\n      this.app = app\n      this.savebutton = true;\n    })\n  }\n\n  deleteApp(){\n    this.dialogsService.confirmDialog(\"Application will be deleted\", \"DELETE\").subscribe(res =>{\n      if(res != false){\n        this.appService.deleteApp(this.app.id).subscribe(res =>{\n          this.router.navigate(['/applications'])\n        })\n      }\n    })\n\n  }\n\n  regenerateSecret(){\n    this.appService.updateAppSecret(this.appid).subscribe(ap =>{\n      this.app = ap\n    })\n  }\n\n}\n","\n<div *ngIf=\"user\">\n  <h3 class=\"userid\">User ID: {{user.id}}</h3>\n  <h4 class=\"useremail\">User email: {{user.email}}</h4>\n  <h4 class=\"userusername\">Username: {{user.username}}</h4>\n\n  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"Add credits\" (keyup)=\"onCreditsInput($event)\" [(ngModel)]=\"addCredits\" [ngModelOptions]=\"{standalone: true}\">\n      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"addCreditsB()\" matTooltip=\"Add usage type\">\n        <mat-icon>add</mat-icon>\n    </button>\n    </mat-form-field>\n  </form>\n\n  <h3 class=\"usercredits\">User's Credits:  {{user.credits}}  </h3>\n\n\n  <button mat-raised-button color=\"primary\" matSuffix aria-label=\"Clear\" [disabled]=\"savebutton\" (click)=\"cancel()\" matTooltip=\"Cancel changes\" class=\"cancel-b\">\n    <mat-icon>cancel</mat-icon>\n  </button>\n  <button mat-raised-button color=\"accent\" matSuffix aria-label=\"Clear\" [disabled]=\"savebutton\" (click)=\"saveUser()\" matTooltip=\"Save changes\" class=\"save-b\">\n    <mat-icon>save</mat-icon>\n  </button>\n\n  <div *ngIf=\"user.spenton\" >\n      <h5 class=\"creditssph\">Credits have been spended on </h5>\n      <div *ngFor=\"let spenton of user.spenton\" class=\"spendedon\">\n        <h5>App:  {{spenton.appid}} </h5>\n          <div *ngFor=\"let sp of spenton.usage | keyvalue\">\n            <!-- <div *ngFor=\"let sp of item | keyvalue\"> -->\n                Usage: <b>{{sp.key}}</b> , Credits spended: <b>{{sp.value}}</b>\n            <!-- </div> -->\n          </div>\n      </div>\n  </div>\n\n</div>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UsersService } from '../api/users.api.service';\nimport { DialogsService } from '../dialogs/dialogs.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-edituser',\n  templateUrl: './edituser.component.html',\n  styleUrls: ['./edituser.component.css']\n})\nexport class EdituserComponent implements OnInit {\n\n  userid:string\n  user:User\n\n  addCredits:Number\n  addedCredits:boolean = false;\n  savebutton:boolean = true;\n  objectKeys = Object.keys;\n\n  constructor(\n    private route:ActivatedRoute,\n    private router:Router,\n    private dialogsService:DialogsService,\n    private usersApi:UsersService\n  ) { }\n\n  ngOnInit() {\n    this.savebutton = true;\n    this.addedCredits = false;\n    delete this.addCredits\n    this.userid= this.route.snapshot.params['id'];\n    this.usersApi.getUserById(this.userid).subscribe((user:User)=>{\n      this.user = user\n    })\n  }\n\n  onCreditsInput(event){\n    this.addCredits = Number(event.target.value)\n    this.savebutton = false;\n  }\n\n  addCreditsB(){\n    this.addedCredits = true\n    this.user.credits = this.user.credits.valueOf() + this.addCredits.valueOf()\n  }\n\n  saveUser(){\n    if(this.addedCredits === false){\n      this.user.credits = this.user.credits.valueOf() + this.addCredits.valueOf()\n    }\n    this.dialogsService.confirmDialog(\"Users credits will now be: \" + this.user.credits, \"CONFIRM\").subscribe(res=>{\n      if(res != false){\n        this.usersApi.updateUsersCredits(this.user).subscribe(res =>{\n          this.dialogsService.confirmDialog(\"Users credits updated\", \"OK\")\n          this.router.navigate(['/users'])\n        })\n      }\n    })\n  }\n\n  cancel(){\n    this.ngOnInit()\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  constructor() { }\n\n  public setQuotsApiKey(apikey:string){\n    localStorage.setItem(\"QUOTSKEY\", apikey);\n  }\n\n  public getQuotsApiKey(){\n    return localStorage.getItem(\"QUOTSKEY\");\n  }\n\n  public deleteQuotsKet(){\n    localStorage.removeItem(\"QUOTSKEY\");\n  }\n}\n","\n<h4 class=\"aph\">Users</h4>\n\n<form class=\"search-form\">\n    <mat-form-field class=\"example-full-width\">\n      <input matInput placeholder=\"Email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone: true}\">\n      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"search()\" matTooltip=\"Search\">\n          <mat-icon>search</mat-icon>\n      </button>\n    </mat-form-field>\n</form>\n\n<div *ngIf=\"dataSource\" class=\"mat-elevation-z8 all\">\n    <table mat-table [dataSource]=\"dataSource\" >\n\n        <ng-container matColumnDef=\"Email\">\n          <th mat-header-cell *matHeaderCellDef> Email </th>\n          <td mat-cell *matCellDef=\"let user\"> {{user.email}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"Username\">\n          <th mat-header-cell *matHeaderCellDef> Username </th>\n          <td mat-cell *matCellDef=\"let user\"> {{user.username}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"Edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let user\"> \n              <button mat-icon-button (click)=\"edituser(user)\">\n                <mat-icon>edit</mat-icon>\n              </button>\n            </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        \n    </table>\n    <mat-paginator [length]=\"totalusers\" [pageSize]=\"10\" (page)=\"pageEvent = getusers($event)\"></mat-paginator>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UsersService } from '../api/users.api.service';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\nimport { MatPaginator, PageEvent } from '@angular/material';\nimport { LoginService } from '../api/login.service';\nimport { SessionService } from '../session/session.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  users:Array<User>\n  totalusers:Number\n  displayedColumns: string[] = ['Email', 'Username', 'Edit'];\n  dataSource\n  email:string\n\n\n  constructor(\n    private usersApi:UsersService,\n    private loginService:LoginService,\n    private sessionService:SessionService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    this.usersApi.getUsers(0, 10).subscribe(res=>{\n      this.users = res\n      this.dataSource = res\n      // console.log(this.users)\n    })\n    this.usersApi.countAllUsers().subscribe(res =>{\n      this.totalusers = Number(res.headers.get('total'))\n    })\n    this.loginService.refreshApiKey(this.sessionService.getQuotsApiKey()).subscribe(res =>{\n      if(res){\n        this.sessionService.setQuotsApiKey(res.refreshedtoken)\n      }\n    })\n  }\n\n  edituser(user:User){\n    this.router.navigate([\"/users/\" + user.id])\n  }\n\n  getusers(event:PageEvent){\n    let offset = event.pageSize * event.pageIndex\n    let size = event.pageSize\n    this.usersApi.getUsers(offset, size).subscribe(res =>{\n      this.users = res\n      this.dataSource = res\n    })\n  }\n\n  search(){\n    this.usersApi.getUserByEmail(this.email).subscribe(res =>{\n      if(res){\n        this.users = res\n        this.dataSource = [res]\n        this.totalusers = 1\n      }\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}